[sw테스트]
 - 테스팅은 결함이 존재함을 밝히는 활동이며 완벽한 테스팅은 불가능하다.
 - 검증과 확인이라는 광범위한 주제의 한 요소이며 검증이란 소프트웨어가 특정 기능을 올바르게 구현하였는지 보장하는 일련의 작업을 의미한다.
 - 검증과 확인은 다양한 소프트웨어 품질보증 활동을 포함하고 있으며 확인은 개발된 소프트웨어가 고객의 요구사항에 맞는지를 보장하는 일련의 작업을 의미한다.
 - 테스팅의 목표는 오류를 발견하는 것이며 훌륭한 테스트는 오류를 발견할 확률이 높은 것이다 따라서 개발자는 “테스트 용이성”을 염두에 두고 컴퓨터 기반 시스템이나 제품을 설계하고 개발하여야 한다.

[SW테스트 프로세스 성숙도 평가모델 TMMi(Test Maturity Model Integration)의 개요]
  가. TMMi의 정의
     - 테스트 프로세스 심사화 개선에 중점을 두고 있는 조직을 지원하기 위한 가장 대표적인 성숙도 모델
     - 테스트 성숙도 계층구조를 정의하는 성숙도 단계, 각 단계에 따른 성숙도 목표, 심사모델로 구성
  나. 테스트 프로세스 모델의 필요성
     - 테스트 품질향상: 테스트 단계별 활동을 정형화 % 표준화, 테스트 역량 강화
     - 제품 중심 테스트 보완: 소프트웨어 개발 생명주기와 정렬(Align), Time to Market: 소프트웨어 규모와 복잡도가 증가에 효과적인 테스트 절차 및 프랙티스 제공

[TMMi의 성숙 단계]
level1 : 초기(Initial)
- 테스팅은 정의되지 않거나 테스팅과 디버깅이 한 부분으로 인식되고 조직은 일반적으로 프로세스를 지원하기 위한 안정적인 환경제공이 어려움
- 조직인력의 능력과 자신감에 의존
 
Level2 : 관리(Managed)
- 테스트와 디버깅이 구분되며 테스트가 소프트웨어 생명주기에서 하나의 독립된 단계로 정의되고, 결함 발견 활동의 집중
- 테스트 정책을 별도로 문서화하거나 품질 정책이나 개발 정책의 일부분으로 정의하고 있어야 함
- 테스트 전략 또는 접근법에 근거하여 테스팅을 하고 있다는 것을 증명
- 프로세스 영역
   . 테스트 정책과 전략
   . 테스트 계획
   . 테스트 모니터링 및 제어
   . 테스트 설계 및 수행
   . 테스트 환경

Level3 : 정의(Defied)
- 테스팅이 개발생명주기와 통합되는 단계로 레벨2에서 테스팅을 포함하고 개발 되었는지 검증하는 테스트 활동 수행
- 테스트 프로세스와 소프트웨어 개발 생명주기가 통합되어 있어야 함
- 별도의 테스트 조직을 갖추고 있어야 하며 레벨2가 프로젝트 레벨에서 내제화 하는 수준이라면 레벨3은 조직차원에서 테스팅을 내제화 하는 수준
- 프로세스 영역
   . 테스트 조직
   . 테스트교육/훈련 프로그램
   . 테스트 수명주기와 통합
   . 비기능 테스팅
   . 동료 검토

Level4 : 관리&측정
(Management& Measurement)
- 발전된 동료검토 활동이 수행되고 있어야 하는데 테스팅 시각에서 볼 때 테스트 케이스를 요구사항 분석 단계부터 설계하고 작성하는 것을 통해 개발 중간 산출물의 결함을 조기에 발견하는 예방적인 테스팅을 의미
- 테스트를 관리하고 측정하는 단계로 소프트웨어 품질 평가와 메트릭을 이용한 테스트 측정을 통해 테스트를 수치화하고 이를 기반으로 정량적으로 관리하고 있어야 달성 가능
- 프로세스 영역
   . 테스트 측정
   . 소프트웨어 품질 평가
   . 발전된 동료검토

Level5 : 최적화(Optimization)
- 결함 예방과 품질제어 활동에 초점, 테스트 프로세스가 정의되고 관리되며, 비용과 효과가 추적되고 감시
- 테스트 프로세스가 지속적으로 개선되고 조정되며 결함예방과 품질 제어활동을 수행
- 이들 활동이 통계적 방법과 다양한 평가 기준에 의해 측정되고 관리자는 지속적인 개선을 유도하기 위해 인프라를 지원하고 동기 부여
- 프로세스 영역
   . 결함 예방
   . 테스트 프로세스 최적화
   . 품질제어

[형상관리 용어(SVN기준)]
가) Repostory : 중앙저장소로 원본 소스를 저장하고 있는 저장소를 의민한다.
나) Working Copy (=Workspace): 작업디렉토리라고 하며, 원본 저장소로부터 체크아웃을 통해 내려 받은 내 로컬 컴퓨터에 있는 작업 사본 디렉토리를 의미한다 
다) Commit : 작업 디렉토리에서 변경 및 추가, 삭제된 파일을 원본 저장소인 서버에 적용하는 것을 말한다.
라) Update : 체크아웃을 받은 작업 디렉토리를 원본 저장소의 가장 최신 커빗된 버전까지 업데이트하는 명령이다.
마) Revision : 소스파일을 수정하여 커밋하게 되면 일정한 규칙에 의하여 숫자가 증가한다. 이 숫자를 의미하며 저장소에 저장된 각각의 파일 버전이라 할 수 있다.
바) Roll Back : 작업디렉토리에 저장되어 있는 사본을 특정 리비전 또는 특정 시간으로 복원할 수 있도록 하는 명령이다.

[결함 관리를 위해 결함 발생시 결함 관리 시스템에 등록되어야 할 필수 항목]
1) 결함 내용
2) 테스트 케이스 식별 번호
3) 결함 유형
4) 발견일
5) 심각도
6) 결함 수정의 우선순위
7) 시정 조치 예정일
8) 수정 담당자
9) 재 테스트 결과
10) 종료일